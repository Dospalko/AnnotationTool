label_names = ['LESEE', 'LESSOR'] # TODO: change this on real files

def json_result():
    return {
        "id": -1,
        "text": "",
        "label": []
    }

def convert_to_jsonl(filename):
    #create an object
    result_list = []
    result = json_result()
    # Open the CSV file
    with open(filename, mode='r', encoding='utf-8') as file:
        # Create a CSV reader
        reader = csv.DictReader(file)
        lines = []
        text = ''

        row_count = sum(1 for row in reader)

        file.seek(0)
        # Read the file again from the beginning
        reader = csv.DictReader(file)

        index = 0

        for row in reader:
            # get document id so we know when its changed
            doc_id_changed = result['id'] != row['document']

            if doc_id_changed:
                if result['id'] != -1:
                    result['text'] = text
                    result_list.append(result)
                    result = json_result()
                    text = ''
                result['id'] = row['document']
                doc_id_changed = False

            # Convert string representation of lists to actual lists
            # enumarate tokens and append it to text, careful with linebreaks
            ner_tags = ast.literal_eval(row['ner_tags'])
            tokens = ast.literal_eval(row['tokens'])
            label = [] # create empty label

            # TODO: this whole cycle might need some adjustments based on ner_tags values, no biggie
            for i, tok in enumerate(tokens):
                start_index = len(text) # always remember where we ended
                if i != 0:
                    start_index += 1
                end_index = start_index + len(tok)
                if ner_tags[i] == 0:
                    if len(label) > 0:
                        result['label'].append(label)
                    label = []
                if ner_tags[i]%2 == 1:
                    if len(label) > 0:
                        result['label'].append(label)
                    lab_index = 0
                    if ner_tags[i] > 2:
                        lab_index = 1
                    label = [start_index, end_index, label_names[lab_index]]
                if ner_tags[i] != 0 and ner_tags[i]%2 == 0: # is tokken tagged?
                    label[1] = label[1] + len(" " + tok)
                if i != 0:
                    text += " "
                text += tok

                #dump remaining labels
                if i == len(tokens) - 1:
                    if len(label) > 0:
                        result['label'].append(label)
            text += '\n'
            index += 1

            if index == row_count:
                doc_id_changed = True
                result['text'] = text
                result_list.append(result)
                result = json_result()
                text = ''
    return result_list